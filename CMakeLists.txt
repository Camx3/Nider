cmake_minimum_required(VERSION 3.5.1)
project(nider)
add_definitions(-DNIDER_VERSION_MAYOR=0)
add_definitions(-DNIDER_VERSION_MENOR=3)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
option(WITH_CUDA "WITH_CUDA" OFF)
if(WITH_CUDA)
  message("-- COMPILAR CON CUDA = ON")
  add_definitions(-DCOMPILAR_CON_CUDA)
else()
  message("-- COMPILAR CON CUDA = OFF")
endif()
include_directories("/usr/local/include" "include")
link_directories("/usr/local/lib" "/usr/local/share/OpenCV/3rdparty/lib")
add_executable(nider Main.cpp Deteccion.cpp Calibracion.cpp Utilidades.cpp Seguimiento.cpp Sistema.cpp)
#pkg-config --static --cflags --libs opencv
target_link_libraries(nider -lopencv_shape -lopencv_stitching -lopencv_objdetect -lopencv_superres -lopencv_videostab -lopencv_calib3d -lopencv_features2d -lopencv_highgui -lopencv_videoio -lopencv_imgcodecs -lopencv_video -lopencv_photo -lopencv_ml -lopencv_imgproc -lopencv_flann -lopencv_core -lpng -lz -lgtk-x11-2.0 -lgdk-x11-2.0 -lpangocairo-1.0 -latk-1.0 -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lfontconfig -lfreetype -lgthread-2.0 -lglib-2.0 -lavcodec-ffmpeg -lavformat-ffmpeg -lavutil-ffmpeg -lswscale-ffmpeg -lbz2 -ldl -lm -lpthread -lrt)
